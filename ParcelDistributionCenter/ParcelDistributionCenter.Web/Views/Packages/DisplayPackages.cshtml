@model IEnumerable<ParcelDistributionCenter.Logic.ViewModels.PackageViewModel>

@{
    ViewData["Title"] = "DisplayPackages";
}

<h1 class="text-center" style="font-weight: bold; margin-top: 10px">Packages List</h1>
<hr />
<p>
    <a asp-action="AddPackage" class="btn btn-primary">Add new Package</a>
</p>
<div>
    <input type="text" id="searchInput" onkeyup="search()" placeholder="Search" title="Type in a name">
    <table class="table" id="packagesTable">
        <thead>
            <tr>

                <th>
                    @Html.DisplayNameFor(model => model.PackageNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Registered)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Size)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DeliveryAddress)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RecipientEmail)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SenderEmail)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PackageNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Registered)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Size)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DeliveryAddress)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RecipientEmail)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SenderEmail)
                    </td>

                    <td>
                        <a asp-action="Edit" asp-route-PackageNumber="@item.PackageNumber" class="btn btn-primary">Edit</a>
                        <a asp-action="DisplaySinglePackage" asp-route-PackageNumber="@item.PackageNumber" class="btn btn-secondary">Details</a>
                        <a asp-action="DeletePackage" asp-route-PackageNumber="@item.PackageNumber" class="btn btn-danger" onclick="return confirmDelete();">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


<script>
        function confirmDelete()
        {
            if (confirm("Are you sure you want to delete this package?"))
            {
                return true;
            }
            return false;
        }
        function search() {
            var input, filter, ul, li, a, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
        table = document.getElementById("packagesTable");
            rows = table.getElementsByTagName("tr");
            for (i = 0; i < rows.length; i++) {
                shouldDisplay= Object.values(rows[i].cells)
                    .map((td)=>td.textContent || td.innerText)
                    .some(tdText => tdText.toUpperCase().includes(filter))
                //td = rows[i].cells[0];
                //txtValue = td.textContent || td.innerText;
                if (shouldDisplay) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }
</script>